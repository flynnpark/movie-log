type Query {
  FindMovie(query: String): [Movie]
  movie: Movie
  movieRating: MovieRating
  GetMyProfile: GetMyProfileResponse!
  user: User
}

type Movie {
  id: Int!
  title: String!
  poster_path: String
  original_language: String!
  original_title: String!
  genre_ids: [Int]!
  adult: Boolean!
  overview: String
  release_date: String!
}

type MovieRating {
  id: Int!
  movieId: Int!
  userId: Int!
  rating: Int!
  createdAt: Int!
}

type SetMovieRatingResponse {
  ok: Boolean!
  error: String
  movieRating: MovieRating
}

type Mutation {
  SetMovieRating(movieId: Int!, rating: Int!): SetMovieRatingResponse!
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  EmailSignUp(email: String!, password: String!, name: String!, birthYear: Int!, profileImage: String): EmailSignUpResponse!
  UpdateMyProfile(password: String, name: String, profileImage: String): UpdateMyProfileResponse!
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

type UpdateMyProfileResponse {
  ok: Boolean!
  error: String
}

type User {
  id: Int!
  email: String!
  password: String!
  name: String!
  birthYear: Int!
  profileImage: String
  createdAt: Int!
}
